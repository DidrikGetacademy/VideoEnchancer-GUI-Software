PS C:\Users\didri\Desktop\VideoEnchancer program> & C:/Users/didri/AppData/Local/Programs/Python/Python311/python.exe "c:/Users/didri/Desktop/VideoEnchancer program/VideoEnchancer.py"
C:\Users\didri\AppData\Local\Programs\Python\Python311\Lib\site-packages\ctranslate2\__init__.py:8: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.
  import pkg_resources
Loading checkpoint shards:  25%|████████████████████████████████████████████████████████████████████████████████████████████████████████                                                                                                                                                                                                                                                                          
Loading checkpoint shards:  50%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
Loading checkpoint shards:  75%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████
Loading checkpoint shards: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████Loading checkpoint shards: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 4/4 [00:18<00:00,  4.59s/it]
tokenizer: Qwen2TokenizerFast(name_or_path='C:\Users\didri\Desktop\LLM-models\LLM-Models\Qwen2.5-Coder-7B-Instruct', vocab_size=151643, model_max_length=32768, is_fast=True, padding_side='right', truncation_side='right', special_tokens={'eos_token': '<|im_end|>', 'pad_token': '<|endoftext|>', 'additional_special_tokens': ['<|im_start|>', '<|im_end|>', '<|object_ref_start|>', '<|object_ref_end|>', '<|box_start|>', '<|box_end|>', '<|quad_start|>', '<|quad_end|>', '<|vision_start|>', '<|vision_end|>', '<|vision_pad|>', '<|image_pad|>', '<|video_pad|>']}, clean_up_tokenization_spaces=False, added_tokens_decoder={
        151643: AddedToken("<|endoftext|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151644: AddedToken("<|im_start|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151645: AddedToken("<|im_end|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151646: AddedToken("<|object_ref_start|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151647: AddedToken("<|object_ref_end|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151648: AddedToken("<|box_start|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151649: AddedToken("<|box_end|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151650: AddedToken("<|quad_start|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151651: AddedToken("<|quad_end|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151652: AddedToken("<|vision_start|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151653: AddedToken("<|vision_end|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151654: AddedToken("<|vision_pad|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151655: AddedToken("<|image_pad|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151656: AddedToken("<|video_pad|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=True),
        151657: AddedToken("<tool_call>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),
        151658: AddedToken("</tool_call>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),
        151659: AddedToken("<|fim_prefix|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),
        151660: AddedToken("<|fim_middle|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),
        151661: AddedToken("<|fim_suffix|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),
        151662: AddedToken("<|fim_pad|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),
        151663: AddedToken("<|repo_name|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),
        151664: AddedToken("<|file_sep|>", rstrip=False, lstrip=False, single_word=False, normalized=False, special=False),
}
)
videoencancer.exe: dtype=  torch.float16
Model loaded successfully! :)
╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── New run ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮││                                                                                                                                                                                                                                                                                                                                                                                                               │ge for my video. The goal is to help it go viral by leveraging current trends │ Please generate a Title, Description, Hashtags, Keywords, and a unique message for my video. The goal is to help it go viral by leveraging current trends and analyzing similar successful videos. The unique message should highlight key insights, secret strategies, or specific elements that contributed to the virality of similar content. Think of it as a short, strategic note or idea that could   │ `Unique message`. No additional fields.│ help this video stand out and perform exceptionally well.in your final answer Use the exact key names: `title`, `description`, `keywords`, `hashtags`, and `Unique message`. No additional fields.                                                                                                                                                                                                            ││ You have been provided with these additional arguments, that you can access using the keys as variables in your python code:                                                                                                                                                                                                                                                                                  │scrolledtext>}.│ {'video_path': 'C:/Users/didri/Desktop/Full-Agent-Flow_VideoEditing/GPEN/0612.mp4', 'Transcript_text_filepath': 'c:\\Users\\didri\\Desktop\\VideoEnchancer program\\./Project_text_files/Audio_TO_transcript.txt', 'chat_display': <tkinter.scrolledtext.ScrolledText object .!ctkframe.!ctkframe2.!ctkframe2.!frame.!scrolledtext>}.                                                                         │          │╰─ TransformersModel - C:\Users\didri\Desktop\LLM-models\LLM-Models│                                                                                                                                                                                                                                                                                                                                                                                                               │╰─ TransformersModel - C:\Users\didri\Desktop\LLM-models\LLM-Models\Qwen2.5-Coder-7B-Instruct ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── Initial plan ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────Here are the facts I know and the plan of action that I will follow to solve the task:
```
### Plan

1. **Extract Audio from Video**:
   - Use the `ExtractAudioFromVideo` tool to extract audio from the provided video file (`C:/Users/didri/Desktop/Full-Agent-Flow_VideoEditing/GPEN/0612.mp4`).
   - Save the extracted audio to a temporary location.

2. **Transcribe Audio to Text**:
   - Use the `Transcriber` tool to transcribe the extracted audio to text.
   - Save the transcript to a file (`c:\\Users\\didri\\Desktop\\VideoEnchancer program\\./Project_text_files/Audio_TO_transcript.txt`).

3. **Log Progress**:
   - Call `Log_Agent_Progress` with stage="action" to log that audio extraction and transcription have been initiated.

4. **Web Search for Similar Content**:
   - Use the `web_search` tool to perform a web search based on the content of the transcribed text.
   - Query: "Similar trending videos related to [extracted content]".

5. **Visit Relevant Webpages**:
   - If necessary, use the `visit_webpage` tool to visit webpages mentioned in the search results and gather more detailed information.

6. **Call Team Members**:
   - **Web_Search_ManagedAgent**: Send the transcribed text to the `Web_Search_ManagedAgent` to perform a deeper web and YouTube search and gather relevant content.
   - **Analytic_Reasoning_ManagedAgent**: Once the search results are collected, forward them to the `Analytic_Reasoning_ManagedAgent` to extract viral insights and generate a content package.

7. **Final Output**:
   - Use the `final_answer` tool to combine the generated content package into a single response containing the title, description, hashtags, keywords, and unique message.
   - Return this final output.

8. **Log Final Step**:
   - Call `Log_Agent_Progress` with stage="reflection" to log that the final output has been generated.

\`\`\`
<end_plan>```
```
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Step 1 ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ ─ Executing parsed code: ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── 
  Log_Agent_Progress(chat_display, stage="info", message="Extracting audio from video...")                                                                                                                                                                                                                                                                                                                       
  audio_path = ExtractAudioFromVideo(video_path)                                                                                                                                                                                                                                                                                                                                                                 
  Log_Agent_Progress(chat_display, stage="info", message=f"Audio extracted and saved to {audio_path}")                                                                                                                                                                                                                                                                                                           
                                                                                                                                                                                                                                                                                                                                                                                                                 
  Log_Agent_Progress(chat_display, stage="info", message="Transcribing audio to text...")                                                                                                                                                                                                                                                                                                                        
  Transcriber(audio_path, Transcript_text_filepath)                                                                                                                                                                                                                                                                                                                                                              
  Log_Agent_Progress(chat_display, stage="info", message="Transcription complete, saved to {Transcript_text_filepath}")                                                                                                                                                                                                                                                                                          
                                                                                                                                                                                                                                                                                                                                                                                                                 
  Log_Agent_Progress(chat_display, stage="action", message="Audio extraction and transcription completed.")                                                                                                                                                                                                                                                                                                      
                                                                                                                                                                                                                                                                                                                                                                                                                 
  Log_Agent_Progress(chat_display, stage="info", message="Performing web search for similar trending videos...")                                                                                                                                                                                                                                                                                                 
  search_query = f"Similar trending videos related to the content of {Transcript_text_filepath}"                                                                                                                                                                                                                                                                                                                 
  search_results = web_search(query=search_query)                                                                                                                                                                                                                                                                                                                                                                
  Log_Agent_Progress(chat_display, stage="info", message="Web search results received.")                                                                                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                                                                                                                                                                                 
  # Assuming search_results contains URLs, we'll visit them                                                                                                                                                                                                                                                                                                                                                      
  for url in search_results:                                                                                                                                                                                                                                                                                                                                                                                     
      Log_Agent_Progress(chat_display, stage="info", message=f"Visiting webpage: {url}")                                                                                                                                                                                                                                                                                                                         
      page_content = visit_webpage(url)                                                                                                                                                                                                                                                                                                                                                                          
      # Store or process the page content as needed                                                                                                                                                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                                                                                                                                                                                 
  # Forward the search results and transcribed text to Web_Search_ManagedAgent                                                                                                                                                                                                                                                                                                                                   
  web_search_payload = {                                                                                                                                                                                                                                                                                                                                                                                         
      "transcript_filepath": Transcript_text_filepath,                                                                                                                                                                                                                                                                                                                                                           
      "search_results": search_results                                                                                                                                                                                                                                                                                                                                                                           
  }                                                                                                                                                                                                                                                                                                                                                                                                              
  web_search_task = Web_Search_ManagedAgent.run(web_search_payload)                                                                                                                                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                                                                                                                                                                                 
  # Forward the search results and transcribed text to Analytic_Reasoning_ManagedAgent                                                                                                                                                                                                                                                                                                                           
  analytic_results = Analytic_Reasoning_ManagedAgent.run(web_search_task, Transcript_text_filepath=Transcript_text_filepath)                                                                                                                                                                                                                                                                                     
                                                                                                                                                                                                                                                                                                                                                                                                                 
  # Combine the generated content package into a single response                                                                                                                                                                                                                                                                                                                                                 
  final_output = {                                                                                                                                                                                                                                                                                                                                                                                               
      "title": analytic_results["title"],                                                                                                                                                                                                                                                                                                                                                                        
      "description": analytic_results["description"],                                                                                                                                                                                                                                                                                                                                                            
      "keywords": analytic_results["keywords"],                                                                                                                                                                                                                                                                                                                                                                  
      "hashtags": analytic_results["hashtags"],                                                                                                                                                                                                                                                                                                                                                                  
      "Unique message": analytic_results["unique_message"]                                                                                                                                                                                                                                                                                                                                                       
  }                                                                                                                                                                                                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                                                                                                                                                                                 
  # Log the final step                                                                                                                                                                                                                                                                                                                                                                                           
  Log_Agent_Progress(chat_display, stage="reflection", message="Final output generated.")                                                                                                                                                                                                                                                                                                                        
                                                                                                                                                                                                                                                                                                                                                                                                                 
  # Return the final answer                                                                                                                                                                                                                                                                                                                                                                                      
  final_answer(final_output)                                                                                                                                                                                                                                                                                                                                                                                     
 ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── 
[INFO] 01:49:59: Extracting audio from video...
[LOG] Extracted audio duration: 9.98 seconds (~0.17 minutes)
[INFO] 01:50:00: Audio extracted and saved to temp_audio.wav
[INFO] 01:50:00: Transcribing audio to text...
Code execution failed at line 'Transcriber(audio_path, Transcript_text_filepath)' due to: TypeError: SpeechToTextToolCPU_VIDEOENCHANCERPROGRAM.encode() takes 2 positional arguments but 3 were given
[Step 1: Duration 54.89 seconds| Input tokens: 3,650 | Output tokens: 703]
Exception in thread Thread-5 (load_llama_instruct):
Traceback (most recent call last):
  File "C:\Users\didri\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 1045, in _bootstrap_inner
    self.run()
  File "C:\Users\didri\AppData\Local\Programs\Python\Python311\Lib\threading.py", line 982, in run
    self._target(*self._args, **self._kwargs)
  File "c:\Users\didri\Desktop\VideoEnchancer program\VideoEnchancer.py", line 670, in load_llama_instruct
    Response = manager_agent.run(
               ^^^^^^^^^^^^^^^^^^
  File "C:\Users\didri\AppData\Local\Programs\Python\Python311\Lib\site-packages\smolagents\agents.py", line 411, in run
    steps = list(self._run_stream(task=self.task, max_steps=max_steps, images=images))
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\didri\AppData\Local\Programs\Python\Python311\Lib\site-packages\smolagents\agents.py", line 464, in _run_stream
    for element in self._generate_planning_step(
  File "C:\Users\didri\AppData\Local\Programs\Python\Python311\Lib\site-packages\smolagents\agents.py", line 608, in _generate_planning_step
    "text": populate_template(
            ^^^^^^^^^^^^^^^^^^
  File "C:\Users\didri\AppData\Local\Programs\Python\Python311\Lib\site-packages\smolagents\agents.py", line 105, in populate_template
    compiled_template = Template(template, undefined=StrictUndefined)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\didri\AppData\Local\Programs\Python\Python311\Lib\site-packages\jinja2\environment.py", line 1211, in __new__
    return env.from_string(source, template_class=cls)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\didri\AppData\Local\Programs\Python\Python311\Lib\site-packages\jinja2\environment.py", line 1108, in from_string
    return cls.from_code(self, self.compile(source), gs, None)
                               ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\didri\AppData\Local\Programs\Python\Python311\Lib\site-packages\jinja2\environment.py", line 768, in compile
    self.handle_exception(source=source_hint)
  File "C:\Users\didri\AppData\Local\Programs\Python\Python311\Lib\site-packages\jinja2\environment.py", line 939, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 25, in template
jinja2.exceptions.TemplateSyntaxError: expected token 'name', got '('
